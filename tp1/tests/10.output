let -> let
type -> type
id -> tipo1
eq -> =
lcurl -> {
id -> id
colon -> :
id -> int
comma -> ,
id -> nome
colon -> :
id -> string
comma -> ,
id -> idade
colon -> :
id -> int
rcurl -> }
type -> type
id -> tipo2
eq -> =
array -> array
of -> of
id -> string
var -> var
id -> a
atrib -> :=
id -> tipo2
lbra -> [
int -> 10
rbra -> ]
of -> of
int -> 0
var -> var
id -> b
atrib -> :=
id -> tipo2
lbra -> [
int -> 5
rbra -> ]
of -> of
id -> tipo1
lcurl -> {
id -> id
eq -> =
int -> 4
comma -> ,
id -> nome
eq -> =
string -> "fran"
comma -> ,
id -> idade
eq -> =
int -> 50
rcurl -> }
var -> var
id -> c
colon -> :
id -> tipo2
atrib -> :=
id -> tipo2
lbra -> [
int -> 100
rbra -> ]
of -> of
string -> ""
var -> var
id -> d
atrib -> :=
id -> tipo1
lcurl -> {
id -> id
eq -> =
int -> 1
comma -> ,
id -> nome
eq -> =
string -> "zÃ©"
comma -> ,
id -> idade
eq -> =
int -> 20
rcurl -> }
var -> var
id -> e
atrib -> :=
id -> tipo2
lcurl -> {
id -> id
eq -> =
int -> 2
comma -> ,
id -> nome
eq -> =
string -> "jÃ£o"
comma -> ,
id -> idade
eq -> =
int -> 30
rcurl -> }
in -> in
id -> d
lbra -> [
int -> 2
rbra -> ]
dot -> .
id -> nome
atrib -> :=
string -> "maria"
semic -> ;
id -> d
lbra -> [
int -> 0
rbra -> ]
dot -> .
id -> age
atrib -> :=
int -> 40
semic -> ;
id -> a
lbra -> [
int -> 5
rbra -> ]
atrib -> :=
int -> 114
semic -> ;
id -> b
lbra -> [
int -> 4
rbra -> ]
atrib -> :=
int -> 6
semic -> ;
id -> c
lbra -> [
int -> 8
rbra -> ]
atrib -> :=
string -> "aladim"
semic -> ;
end -> end
